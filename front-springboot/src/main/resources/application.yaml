server:
  port: 8081
  session:
    #seconds
    timeout: 6000

fran:
  enabled: true
  routes:
    back:
      url:
        - "http://127.0.0.1:8080/"
        - "http://127.0.0.1:8082/"
        - "http://127.0.0.1:8083/"
      path: /back/**
      keepalive:
        using: true
        path: "keepalive/"
        expectedContent: "true"
    mapi:
      url: https://mapitest.cgtn.com/mobileapp
      path: /mapi/**
    upload:
      url: http://127.0.0.1:8080/
      path: /upload/**


zuul:
  #addHostHeader: true
  ignoredHeaders:
  sensitiveHeaders:
  routes:
    back:
      url: http://127.0.0.1:8080/
      path: /back/**
    mapi:
      url: https://mapitest.cgtn.com/mobileapp
      path: /mapi/**
    upload:
      url: http://127.0.0.1:8080/
      #upload file name garbled
      #https://github.com/spring-cloud/spring-cloud-netflix/issues/1385
      #file upload is supported better through the zuul servlet directly rather than the spring mvc controller.
      #Prefix your uploads with /zuul and try.
      #
      #client upload use /zuul/upload/** to upload
      path: /upload/**
  host:
    #api invoke timeout setting
    socket-timeout-millis: 20000
    connect-timeout-millis: 20000

spring:
  http:
    # file upload request size limit
    multipart:
      max-file-size: 5000Mb
      max-request-size: 5000Mb
  freemarker:
    cache: false
    templateLoaderPath:
      - "classpath:/templates/"
      - "file:templates/"

security:
  basic:
    enabled: true


ribbon:
  eureka:
    enabled: false


logging:
    config: classpath:logback.xml


roles:
  configs:
    - path: "/css/**"
      permitAll: true
    - path: "/local/**"
      roles:
        - "role1"
        - "role2"
    - path: "/mapi/**"
      roles: "role2"